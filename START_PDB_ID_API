How to get PDB ID's so you can put them in CSV list for batch download

Use this API
https://www.rcsb.org/docs/programmatic-access/web-apis-overview#search-api
______________________________________________________________________________

pip3 install requests

cd into a folder you would store general documents
nano
COPY PASTE THE FOLLOWING AND ADD YOUR OWN STUFF TO IT
ctrl+o + ENTER
pdb_request1.py
ENTER
ctrl+X

_____________________________________________________________________________________
GUIDE
https://search.rcsb.org/index.html#search-api

HOW TO GENERATE SEARCH REQUEST
https://youtu.be/0fmb_LMA_i8?si=9rz4Fx3CdaM-v1pR
_____________________________________________________________________________________

import requests
import json
import urllib.parse

search_request =  {  # Example search request (replace with your actual query)
    "query": {
        "type": "group",
        "nodes": [
            {
                "type": "terminal",
                "service": "full_text",
                "parameters": {
                    "value": "t cell receptor"
                }
            },
            {
                "type": "terminal",
                "service": "text",
                "parameters": {
                    "attribute": "rcsb_entity_source_organism.ncbi_scientific_name",
                    "value": "Homo sapiens",
                    "operator": "exact_match"
                }
            }
        ],
        "logical_operator": "and"
    },
    "request_options": {
    "return_all_hits": true
  },
  "return_type": "entry"
}
        },
        "results_content_type": [
            "experimental"
        ],
        "sort": [
            {
                "sort_by": "score",
                "direction": "desc"
            }
        ],
        "scoring_strategy": "combined"
    }
}




url_encoded_request = urllib.parse.quote(json.dumps(search_request)) # URL encode the json
url = f"https://search.rcsb.org/rcsbsearch/v2/query?json={url_encoded_request}"

response = requests.get(url)  # Or requests.post(url, json=search_request) for POST

if response.status_code == 200:
    results = response.json()
    # Process the results
    print(results)
else:
    print(f"Error: {response.status_code}")
    print(response.text)
